apply plugin: 'com.android.application'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'idea'

android {
    compileSdkVersion 28
    dexOptions {
        javaMaxHeapSize "6g"
    }
        defaultConfig {
        applicationId "com.publicmethod.ericdewildt"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

idea {
    module {
        sourceDirs += files(
                'build/generated/source/kapt/main',
                'build/generated/source/kapt/debug',
                'build/generated/source/kapt/release',
                'build/generated/source/kaptKotlin/main',
                'build/generated/source/kaptKotlin/debug',
                'build/generated/source/kaptKotlin/release',
                'build/tmp/kapt/main/kotlinGenerated')
        generatedSourceDirs += files(
                'build/generated/source/kapt/main',
                'build/generated/source/kapt/debug',
                'build/generated/source/kapt/release',
                'build/generated/source/kaptKotlin/main',
                'build/generated/source/kaptKotlin/debug',
                'build/generated/source/kaptKotlin/release',
                'build/tmp/kapt/main/kotlinGenerated')
    }
}

def room_version = '2.0.0-rc01'
def lifecycle_version = '2.0.0-alpha1'
def arrow_version = "0.7.2"
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation 'com.google.android.material:material:1.0.0-rc01'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-rc01'

//    Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

//    Arrow
    implementation "io.arrow-kt:arrow-core:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    implementation "io.arrow-kt:arrow-typeclasses:$arrow_version"
    implementation "io.arrow-kt:arrow-data:$arrow_version"
    implementation "io.arrow-kt:arrow-instances-core:$arrow_version"
    implementation "io.arrow-kt:arrow-instances-data:$arrow_version"
    kapt "io.arrow-kt:arrow-annotations-processor:$arrow_version"

    implementation "io.arrow-kt:arrow-free:$arrow_version"
    implementation "io.arrow-kt:arrow-mtl:$arrow_version"
    implementation "io.arrow-kt:arrow-effects:$arrow_version"
    implementation "io.arrow-kt:arrow-effects-rx2:$arrow_version"
    implementation "io.arrow-kt:arrow-effects-kotlinx-coroutines:$arrow_version"
    implementation "io.arrow-kt:arrow-optics:$arrow_version"
    implementation "io.arrow-kt:arrow-generic:$arrow_version"

//    Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

//    Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.24.0'

//    Testing
    implementation 'com.github.EricDw:TestingUtilsExample:v0.0.2-alpha'
    testImplementation 'junit:junit:4.12'
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    implementation project(path: ':archer')
}
kotlin {
    experimental {
        coroutines "enable"
    }
}
